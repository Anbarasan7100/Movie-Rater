server:
  port: 9090 # Change default port from 8080 to 9090

spring:
  application:
    name: MovieRater

  datasource:
    url: jdbc:mysql://localhost:3306/movie_rater?createDatabaseIfNotExist=true
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect

# Spring Boot detects this and autoconfigures:
#Tomcat (embedded server), DispatcherServlet, Jackson (for JSON), RequestMappingHandler, etc.
# It doesn’t need extra configuration to start working because there’s no external dependency (like a DB)
#
#spring-boot-devtools (Also autoconfigured without YAML)
#Doesn’t need configuration because it's just enhancing your dev environment.
#
#spring-boot-starter-data-jpa and hibernate-core (Needs YAML configuration)
#These deal with persistence, which requires connecting to a real database.
#A DataSource (URL, username, password)
#JPA EntityManagerFactory
#Hibernate dialect
#Because it doesn’t know:
#What database to connect to, What driver to use, What credentials to use
#Whether to update, validate, or create the schema